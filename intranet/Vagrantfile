# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|
  config.vm.box = "lubuntu-desktop-22.04-v2"
  config.vm.box_url = "../boxes/lubuntu-desktop-22.04-v2.box"

  # virtualbox specifics
  config.vm.provider "virtualbox" do |vb|
    vb.name = "intranet"
    vb.cpus = 2
    vb.memory = "2048"

    # Put it in a VirtualBox group
    vb.customize ["modifyvm", :id, "--groups", "/Capstone"]

    # set the network adapters
    # vagrant needs one of them to be nat with port forwarding
    vb.customize ["modifyvm", :id, "--nic1", "intnet", "--intnet1", "intnet-2"]
    vb.customize ["modifyvm", :id, "--nic1", "intnet", "--intnet1", "intnet-2", "--macaddress1", "080027026A00"]

    vb.customize ["modifyvm", :id, "--nic2", "nat"]
    vb.customize ["modifyvm", :id, "--natpf2" , "guestssh,tcp,,21903,,22"]
  end

  config.vm.hostname = "intranet"

  #these look a little wonky but just copying for now
  config.vm.provision "shell", inline: <<-SHELL
    echo '192.168.20.100  intranet.acme.local' >> /etc/hosts
  SHELL

  # Create ip addresses
  config.vm.provision "shell", path: "./files/create-ips.sh"

  # Create users
  config.vm.provision "shell", path: "./files/create-users.sh"

  # Set up Moe's ssh keys, reuse our shared key
  config.vm.provision "file", source: "../keys/id_rsa.pub", destination: "~vagrant/moe_authorized_keys"
  config.vm.provision "shell", inline: <<-SHELL
    mkdir ~moe/.ssh 
    cp ~vagrant/moe_authorized_keys ~moe/.ssh/authorized_keys
    chown -R moe:moe ~moe
  SHELL

  config.vm.provision "shell", inline: <<-SHELL
    cp /vagrant/files/upload.py /usr/bin/upload.py
    chown root:root /usr/bin/upload.py
    chmod 755 /usr/bin/upload.py
  SHELL

  config.vm.provision "shell", inline: <<-SHELL
    echo "0 2 * * * /usr/bin/python3 /usr/bin/upload.py" | crontab -u root -
  SHELL

  # moe's .bash_history
  config.vm.provision "shell", inline: <<-SHELL
    echo "sudo find /var/www/html | less" >> ~moe/.bash_history
    echo "vim upload.py" >> ~moe/.bash_history
    echo "./upload.py" >> ~moe/.bash_history
    echo "vim upload.py" >> ~moe/.bash_history
    echo "./upload.py" >> ~moe/.bash_history
    echo "sudo mv upload.py /usr/bin/" >> ~moe/.bash_history
    echo "sudo crontab -e" >> ~moe/.bash_history
    chown moe:moe ~moe/.bash_history
  SHELL

  # here come the apt installs, so do an update once
  config.vm.provision "shell", inline: "apt update"

  # install standard tools
  config.vm.provision "shell", inline: "apt install -y curl net-tools vim"

  config.vm.provision "shell", inline: "apt install -y apache2 mariadb-server php libapache2-mod-php php-mysql"

  config.vm.provision "shell", inline: <<-SHELL
    rm -rf /var/www/html
    tar -xzf /vagrant/files/html.tgz -C /var/www/
    mysql < /vagrant/files/db.sql
    systemctl restart mariadb
    systemctl restart apache2
  SHELL

  # only the acme user should be able to graphically login
  config.vm.provision "shell", path: "./files/acme-login.sh"

  # upload teardown script to be run outside of Vagrant
  config.vm.provision "file", source: "./files/teardown.sh", destination: "~/teardown.sh"

  # Allow temporary root ssh access so teardown script can remove vagrant user
  config.vm.provision "file", source: "../keys/id_rsa.pub", destination: "~/id_rsa.pub"
  config.vm.provision "shell", inline: <<-SHELL
    mkdir -p /root/.ssh
    cp ~vagrant/id_rsa.pub /root/.ssh/authorized_keys
  SHELL
end
